// ==================== Imports =====================//
// ==================== Imports =====================//

//

// ==================== Query =====================//
// ==================== Query =====================//

//

// ==================== Render =====================//
// ==================== Render =====================//


// ==================== Imports =====================//

// NextJS
import Link from 'next/link'
import Image from 'next/image'

import { Client } from '../../../source/organisms/content/contentful'
import { TypeProjectsFields } from "@/source/organisms/content/contentful";
import { documentToReactComponents } from '@contentful/rich-text-react-renderer'
import { BLOCKS, Document } from '@contentful/rich-text-types'

// ==================== Imports =====================//

//

// ==================== Query =====================//
// ==================== Query =====================//

//

// ==================== Render =====================//

// export async function generateStaticParams({params}) {

//   const data = await Client.getEntries({
//     content_type: 'projects'
//   })

//   const res = await data

//   return res.items.map((project) => ({
//     project: toString(params!.project),
//   }))

//   console.log(data)


//   //   return data.items.map((project) => ({
//   //     project: toString(project.fields.slug),
//   //   }))
//   // }



//   // export async function generateStaticParams({ params }: TypeProjectsFields) {

//   //   const data = await Client.getEntries({
//   //     content_type: 'projects'
//   //   })

//   //   const paths: TypeProjectsFields = data.items.map((project) => {
//   //     return {
//   //       params: { project: project.fields }
//   //     }
//   //   })

//   //   console.log(paths)

// }

/** Generate Individual Page Data **/
// export const getStaticProps: GetStaticProps = async ({ params }) => {
//   const { items } = await Client.getEntries({
//     content_type: 'projects',
//     'fields.slug': params!.project
//   })
//   if (!items.length) {
//     return {
//       redirect: {
//         destination: '/',
//         permanent: false
//       }
//     }
//   }

//   return {
//     props: {
//       project: items[0]
//     },
//     revalidate: 1
//   }
// }


// getStaticProps in Next13
// async function getProjectData({params}: TypeProjectsFields) {

//   const project = await Client.getEntries({
//     content_type: 'projects', // <-- set content_type
//     'fields.projectId': params     // <-- filter the page with the slug (you can pass it as a props too)
//   })

//   console.log(data)
//   return data

// }

// getStaticPaths in Next13
export async function generateStaticParams() {

    const data = await Client.getEntries({
    content_type: 'projects', // <-- set content_type
    // 'fields.projectId': params     // <-- filter the page with the slug (you can pass it as a props too)
  })
  // console.log("Project Name:", data.items);

  // return [{
  //   slug: 'overriden',
  // }]

  const projectSlug: TypeProjectsFields = data.items.map(
    (project) => project.fields
  )

  // console.log(projectSlug.slug)

  return projectSlug.map((c: { name: string; }) => ({
    slug: c?.name.replace(/\s+/g, "-").toLowerCase()
  }))

}

export default async function Project({ params }: TypeProjectsFields) {

  // const { items } = await Client.getEntries({
  //   content_type: 'projects', // <-- set content_type
  //   'fields.projectId': params     // <-- filter the page with the slug (you can pass it as a props too)
  // })

  // const {
  //   projectId,
  //   name,
  //   slug,
  //   logo,
  //   client,
  //   work,
  //   featured,
  //   featuredImageLink,
  //   caseStudy
  // } = params as TypeProjectsFields

  // console.log(params)
  // console.log(items[projectId].fields)

  return (
    <>

      <header>
        <h3>Sample Project Title</h3>
      </header>

      <main>
        <h5>Sample Project Description</h5>

        <>
          <h6>Client</h6>
          {/* <p>{name}</p> */}
          {/* {items['fields']} */}
        </>
        <>
          <h6>Project</h6>
          {/* <p>{work}</p> */}
        </>

      </main>

      <footer>

        <ol>
          <li>
            <Link href={'/projects/#previous'}>
              Previous Project Link
            </Link>
          </li>
          <li>
            <Link href={'/projects/#next'}>
              Next Project Link
            </Link>
          </li>
        </ol>

      </footer>

    </>

    // <>
    //   <header id="featured-image">
    //     <p>Project ID: {projectId}</p>
    //     {featured ? (
    //       <Image
    //         src={'https:' + featured.fields.file.url}
    //         height={featured.fields.file.details.image?.height}
    //         width={featured.fields.file.details.image?.width}
    //         alt={featured.fields.title}
    //       />
    //     ) : (
    //       <p>
    //         <b>No featured Image.</b>
    //       </p>
    //     )}
    //   </header>

    //   <main>
    //     <section id="brand-identity">
    //       {logo ? (
    //         <Image
    //           src={'https:' + logo.fields.file.url}
    //           height={logo.fields.file.details.image?.height}
    //           width={logo.fields.file.details.image?.width}
    //           alt={`${name}`}
    //         />
    //       ) : (
    //         <p>Logo Missing</p>
    //       )}

    //       <div id="project-details">
    //         <>
    //           <h6>Client</h6>
    //           <p>{client}</p>
    //         </>
    //         <>
    //           <h6>Project</h6>
    //           <p>{work}</p>
    //         </>
    //       </div>

    //       <div id="case-study">
    //         <h6>Case Study</h6>
    //         {documentToReactComponents(caseStudy as Document)}

    //         <div id="project-gallery">
    //           {featured ? (
    //             <Image
    //               src={'https:' + featured.fields.file.url}
    //               height={featured.fields.file.details.image?.height}
    //               width={featured.fields.file.details.image?.width}
    //               alt={featured.fields.title}
    //             />
    //           ) : (
    //             <p>
    //               <b>No featured Image.</b>
    //             </p>
    //           )}
    //         </div>
    //       </div>
    //     </section>
    //   </main>
    // </>
  )
}


// ==================== Render =====================//












// ==================== Imports =====================//

//React
import { use } from "react"

// NextJS
import Link from 'next/link'

// Contentful Client
import { Client } from '@/source/organisms/content/contentful'
import { TypeProjectsFields } from '@/source/organisms/content/contentful'

// Fullpage JS
// @ts-ignore
import { FullpageSection } from '@ap.cx/react-fullpage'

// ==================== Imports =====================//

//

// ==================== Query =====================//

async function getProjects() {

  const data = await Client.getEntries({
    content_type: 'projects'
  })

  const projectData: TypeProjectsFields = data.items.map(
    (project) => project.fields
  )

  return projectData
}

// ==================== Query =====================//

//

// ==================== Render =====================//

export default function Projectslist() {
  const projectData = use(getProjects())

  return (

    <>
      {projectData
        .sort((a: { projectId: number }, b: { projectId: number }) => {
          return a.projectId - b.projectId
        })
        .map((project: TypeProjectsFields) => (
          <FullpageSection
            key={project.projectId}
            data-anchor={project.slug}
            style={{
              backgroundColor: 'lime',
              height: '100vh',
              width: '100vw',
              display: 'flex',
              alignItems: 'center',
              // justifyContent: 'center',
              backgroundImage: `url(${'https:' + project.featured?.fields.file.url})`,
              backgroundSize: 'cover'
            }}>
            <header>
              <p>{project.projectId}</p>
            </header>

            <main>
              <p>{project.work}</p>
              <p>{project.client}</p>
              <Link
                // href={`/projects/${projectId}`}
                href={{
                  pathname: `/projects/${project.projectId}`
                }}
                as={`/projects/${project.slug}`}
              >
                <h3> Explore {project.name}</h3>
              </Link>
            </main>
          </FullpageSection>
        ))}

    </>

  )
}

// ==================== Render =====================//


{/* <Fullpage>

  <FullPageSections>

    <FullpageSection style={{
      backgroundColor: 'lime',
      height: '100vh',
      padding: '1em',
    }}>
      1
    </FullpageSection>

    <FullpageSection style={{
      backgroundColor: 'coral',
      padding: '1em',
    }}>
      2
    </FullpageSection>
    <FullpageSection style={{
      backgroundColor: 'firebrick',
      padding: '1em',
    }}>
      3
    </FullpageSection>

  </FullPageSections>

</Fullpage> */}

{/* <>
  {projectData
    .sort((a: { projectId: number }, b: { projectId: number }) => {
      return a.projectId - b.projectId
    })
    .map((project: TypeProjectsFields) => (
      <div
        key={project.projectId}
        className="section"
        data-anchor={project.slug}
      >
        <header>
          <p>{project.projectId}</p>
        </header>

        <main>
          <p>{project.work}</p>
          <p>{project.client}</p>
          <Link
            // href={`/projects/${projectId}`}
            href={{
              pathname: `/projects/${project.projectId}`
            }}
            as={`/projects/${project.slug}`}
          >
            <h3> Explore {project.name}</h3>
          </Link>
        </main>
      </div>
    ))}
</> */}




// ==================== Imports =====================//

'use client'

//React
import { use } from "react"
import React, { Component } from 'react'

// NextJS
import Link from 'next/link'
import Image from 'next/image'

// Fullpage JS
// @ts-ignore
import Fullpage, { FullPageSections, FullpageNavigation } from '@ap.cx/react-fullpage'

// List
import Projectslist from "./projectslist"

// ==================== Imports =====================//

//

// ==================== Query =====================//

export const revalidate = 60

// ==================== Query =====================//

//

// ==================== Render =====================//

export default function Projects() {

  return (
    <Fullpage>
      <FullpageNavigation />
      <FullPageSections>
        <Projectslist />
      </FullPageSections>
    </Fullpage>

  )
}

// ==================== Render =====================//

// export default function Projects() {

//   const anchors = ["firstPage", "secondPage", "thirdPage"]
//   const opts = {
//     licenseKey: 'gplv3-license',
//     scrollOverflow: false,
//     responsiveWidth: 400,
//     responsiveHeight: 900,
//     sectionsColor: ["#7fff00", "#00ffff", "#29ab87"]
//   }

//   return (

//     <ReactFullpage
//       {...opts}
//       onLeave={(origin, destination, direction) => {
//         // console.log("onLeave event", { origin, destination, direction });
//       }}
//       render={({ state, fullpageApi }) => {
//         // console.log("render prop change", state, fullpageApi);
//         return (
//           <ReactFullpage.Wrapper>
//             <Projectslist />
//           </ReactFullpage.Wrapper>
//         )
//       }}
//     />

//   )
// }

// export default class App extends Component {
//   render() {
//     return (
//       <Fullpage>

//         <FullPageSections>

//           <FullpageSection style={{
//             backgroundColor: 'lime',
//             height: '100vh',
//             padding: '1em',
//           }}>1</FullpageSection>
//           <FullpageSection style={{
//             backgroundColor: 'coral',
//             padding: '1em',
//           }}>2</FullpageSection>
//           <FullpageSection style={{
//             backgroundColor: 'firebrick',
//             padding: '1em',
//           }}>3</FullpageSection>

//         </FullPageSections>

//       </Fullpage>
//     )
//   }
// }






// ==================== Imports =====================//

//React
import { use } from "react"

// NextJS
import Link from 'next/link'

// Contentful Client
import { Client } from '@/source/organisms/content/contentful'
import { TypeProjectsFields } from '@/source/organisms/content/contentful'

// ==================== Imports =====================//

//

// ==================== Query =====================//

async function getProjects() {

  const data = await Client.getEntries({
    content_type: 'projects'
  })

  const projectData: TypeProjectsFields = data.items.map(
    (project) => project.fields
  )

  return projectData
}

// ==================== Query =====================//

//

// ==================== Render =====================//

export default function Projectslist() {
  const projectData = use(getProjects())
  return (
    <>
      {projectData
        .sort((a: { projectId: number }, b: { projectId: number }) => {
          return a.projectId - b.projectId
        })
        .map((project: TypeProjectsFields) => (
          <div
            key={project.projectId}
            className="section fp-auto-height-responsive"
            data-anchor={project.slug}
          >
            <header>
              <p>{project.projectId}</p>
            </header>

            <main>
              <p>{project.work}</p>
              <p>{project.client}</p>
              <Link
                // href={`/projects/${projectId}`}
                href={{
                  pathname: `/projects/${project.projectId}`
                }}
                as={`/projects/${project.slug}`}
              >
                <h3> Explore {project.name}</h3>
              </Link>
            </main>
          </div>
        ))}
    </>
  )
}

// ==================== Render =====================//






// ==================== Imports =====================//

'use client'

//React
import { use } from "react"

// NextJS
import Link from 'next/link'
import Image from 'next/image'

// Fullpage JS
import ReactFullpage from '@fullpage/react-fullpage'

// List
import Projectslist from "./projectslist"

// ==================== Imports =====================//

//

// ==================== Query =====================//

export const revalidate = 60

// ==================== Query =====================//

//

// ==================== Render =====================//

export default function Projects() {

  const opts = {
    licenseKey: 'gplv3-license',
  }

  return (

    // @ts-ignore
    <ReactFullpage
      {...opts}
      scrollOverflow={false}
      responsiveWidth={800}
      // anchors={anchors}
      navigation
      // navigationTooltips={anchors}
      render={({ state, fullpageApi }) => {
        return (
          <ReactFullpage.Wrapper>
            <Projectslist />
          </ReactFullpage.Wrapper>
        )
      }}
    />

  )
}


// ==================== Render =====================//

